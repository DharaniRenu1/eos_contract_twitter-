Eos = require('eosjs')
fs =require('fs')


initaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'
initaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'
keyProvider = initaPrivate

wif = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'
pubkey = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'


// Default configuration (additional options below)
config = {
  chainId: 'cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f', // 32 byte (64 char) hex string
  keyProvider: ['5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'], // WIF string or array of keys..
  httpEndpoint: 'http://127.0.0.1:8888',
  expireInSeconds: 60,
  broadcast: true,
  verbose: false, // API activity
  sign: true
}
config.binaryen = require('binaryen')
eos= Eos.Localnet(config)

wasm = fs.readFileSync(`eosio.token.wasm`);
abi = fs.readFileSync(`eosio.token.abi`);
/*
eos.setcode('uu',0,0, wasm,function(err,data){
if(err)throw err;
console.log(data);
});

eos.setabi('uu', JSON.parse(abi),(err,data)=>{
if(err)throw err;
console.log(data);
});
*/
/*
eos.transaction('uu', myaccount => {

 myaccount.create('uu', '10000000.000 TOK', {scope:['uu'],authorization: ['uu']});

 myaccount.issue('uu', '10000.000 TOK', 'issue',{scope:['uu'],authorization: ['uu']});
})

*/
/*
eos.transaction('uu', myaccount => {
  myaccount.transfer('uu', 'user1', '1.000 TOK@uu','',{scope:['uu'],authorization: ['uu']});
})
eos.getCurrencyBalance('root', 'root', 'TOK',(err,data)=>{
if(err) throw err;
console.log(data);
});

*/
 eos.transaction(tr => {
  tr.newaccount({
    creator: 'eosio',
    name: 'aa',
    owner: pubkey,
    active: pubkey
  })

  tr.buyrambytes({
    payer: 'eosio',
    receiver: 'uu',
    bytes: 81192
  })

  tr.delegatebw({
    from: 'eosio',
    receiver: 'eosio.token',
    stake_net_quantity: '10.0000 SYS',
    stake_cpu_quantity: '10.0000 SYS',
    transfer: 0
  })
})
/*


eos.newaccount({
  creator: 'eosio',
  name: 'uu',
  owner: initaPublic,
  active: initaPublic,
  recovery: 'eosio'
})

*/
